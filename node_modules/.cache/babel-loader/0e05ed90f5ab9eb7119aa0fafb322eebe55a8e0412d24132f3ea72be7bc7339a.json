{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await client.get('/fakeApi/posts');\n  return response.data;\n});\nexport const getBooks = createAsyncThunk('post/getPosts', async () => {\n  return fetch('http://openlibrary.org/search.json?title=drac').then(res => res.json());\n});\nßß;\nconst initialState = {\n  numFound: 0,\n  start: 0,\n  numFoundExact: true,\n  docs: [],\n  num_found: 0,\n  q: '',\n  offset: null\n};\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState,\n  extraReducers: {\n    [getBooks.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [getBooks.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload;\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.loading = false;\n    }\n  }\n});\nexport default bookSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchPosts","response","client","get","data","getBooks","fetch","then","res","json","ßß","initialState","numFound","start","numFoundExact","docs","num_found","q","offset","bookSlice","name","extraReducers","pending","state","action","loading","fulfilled","posts","payload","rejected","reducer"],"sources":["/Users/mac/Desktop/divine_books/src/redux/slices/bookSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await client.get('/fakeApi/posts')\n  return response.data\n})\n\nexport const getBooks = createAsyncThunk('post/getPosts', async () => {\n  return fetch('http://openlibrary.org/search.json?title=drac').then((res) => res.json())\n})\n\ninterface BookState {\n  numFound: number\n  start: number\n  numFoundExact: boolean\n  docs: unknown[]\n  num_found: number\n  q: string\n  offset: null\n}\nßß\n\nconst initialState: BookState = {\n  numFound: 0,\n  start: 0,\n  numFoundExact: true,\n  docs: [],\n  num_found: 0,\n  q: '',\n  offset: null\n}\n\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState,\n  extraReducers: {\n    [getBooks.pending as any]: (state: { loading: boolean }, action: any) => {\n      state.loading = true\n    },\n    [getBooks.fulfilled as any]: (state: { loading: boolean; posts: any }, action: { payload: Record<string, unknown> }) => {\n      state.loading = false\n      state.posts = action.payload\n    },\n    [getBooks.rejected as any]: (state: { loading: boolean }, action: any) => {\n      state.loading = false\n    }\n  }\n})\n\nexport default bookSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAME,QAAQ,GAAG,MAAMC,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACnD,OAAOF,QAAQ,CAACG,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGN,gBAAgB,CAAC,eAAe,EAAE,YAAY;EACpE,OAAOO,KAAK,CAAC,+CAA+C,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AACzF,CAAC,CAAC;AAWFC,EAAE;AAEF,MAAMC,YAAuB,GAAG;EAC9BC,QAAQ,EAAE,CAAC;EACXC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE,IAAI;EACnBC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE,CAAC;EACZC,CAAC,EAAE,EAAE;EACLC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAGrB,WAAW,CAAC;EAC5BsB,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,aAAa,EAAE;IACb,CAAChB,QAAQ,CAACiB,OAAO,GAAU,CAACC,KAA2B,EAAEC,MAAW,KAAK;MACvED,KAAK,CAACE,OAAO,GAAG,IAAI;IACtB,CAAC;IACD,CAACpB,QAAQ,CAACqB,SAAS,GAAU,CAACH,KAAuC,EAAEC,MAA4C,KAAK;MACtHD,KAAK,CAACE,OAAO,GAAG,KAAK;MACrBF,KAAK,CAACI,KAAK,GAAGH,MAAM,CAACI,OAAO;IAC9B,CAAC;IACD,CAACvB,QAAQ,CAACwB,QAAQ,GAAU,CAACN,KAA2B,EAAEC,MAAW,KAAK;MACxED,KAAK,CAACE,OAAO,GAAG,KAAK;IACvB;EACF;AACF,CAAC,CAAC;AAEF,eAAeN,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}