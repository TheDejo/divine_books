{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchBooks = createAsyncThunk('books/getBooks', async () => {\n  return await fetch('http://openlibrary.org/search.json?title=drac').then(res => res.json());\n});\nconst initialState = {\n  numFound: 0,\n  start: 0,\n  numFoundExact: true,\n  docs: [],\n  num_found: 0,\n  q: '',\n  offset: null\n};\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchBooks.fulfilled, (state, action) => {});\n  }\n});\nexport default bookSlice.reducer;\n\n// extraReducers: {\n//     [getBooks.pending as any]: (state: { loading: boolean }, action: any) => {\n//       state.loading = true\n//     },\n//     [getBooks.fulfilled as any]: (state: { loading: boolean; posts: any }, action: { payload: Record<string, unknown> }) => {\n//       state.loading = false\n//       state.posts = action.payload\n//     },\n//     [getBooks.rejected as any]: (state: { loading: boolean }, action: any) => {\n//       state.loading = false\n//     }\n//   }","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchBooks","fetch","then","res","json","initialState","numFound","start","numFoundExact","docs","num_found","q","offset","bookSlice","name","extraReducers","builder","addCase","fulfilled","state","action","reducer"],"sources":["/Users/mac/Desktop/divine_books/src/redux/slices/bookSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\nexport const fetchBooks = createAsyncThunk('books/getBooks', async () => {\n  return await fetch('http://openlibrary.org/search.json?title=drac').then((res) => res.json())\n})\n\ninterface BookState {\n  numFound: number\n  start: number\n  numFoundExact: boolean\n  docs: unknown[]\n  num_found: number\n  q: string\n  offset: null\n}\n\nconst initialState: BookState = {\n  numFound: 0,\n  start: 0,\n  numFoundExact: true,\n  docs: [],\n  num_found: 0,\n  q: '',\n  offset: null\n}\n\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchBooks.fulfilled, (state, action) => {})\n  }\n})\n\nexport default bookSlice.reducer\n\n// extraReducers: {\n//     [getBooks.pending as any]: (state: { loading: boolean }, action: any) => {\n//       state.loading = true\n//     },\n//     [getBooks.fulfilled as any]: (state: { loading: boolean; posts: any }, action: { payload: Record<string, unknown> }) => {\n//       state.loading = false\n//       state.posts = action.payload\n//     },\n//     [getBooks.rejected as any]: (state: { loading: boolean }, action: any) => {\n//       state.loading = false\n//     }\n//   }\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,gBAAgB,EAAE,YAAY;EACvE,OAAO,MAAME,KAAK,CAAC,+CAA+C,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC/F,CAAC,CAAC;AAYF,MAAMC,YAAuB,GAAG;EAC9BC,QAAQ,EAAE,CAAC;EACXC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE,IAAI;EACnBC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE,CAAC;EACZC,CAAC,EAAE,EAAE;EACLC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACjB,UAAU,CAACkB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC,CAAC;EAC9D;AACF,CAAC,CAAC;AAEF,eAAeP,SAAS,CAACQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}