{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport constant from '@/config/constants';\nconst {\n  API: {\n    routes\n  }\n} = constant;\nexport const fetchBooks = createAsyncThunk(routes.asyncKey, searchTerm => {\n  return fetch(`${routes.searchBooks}=${searchTerm}`).then(res => res.json());\n});\nconst initialState = {\n  books: {\n    numFound: 0,\n    start: 0,\n    numFoundExact: true,\n    docs: [],\n    num_found: 0,\n    q: '',\n    offset: null\n  },\n  loading: false\n};\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState,\n  extraReducers(builder) {\n    builder.addCase(fetchBooks.pending, state => {\n      state.loading = true;\n    }).addCase(fetchBooks.fulfilled, (state, action) => {\n      state.loading = false;\n      state.books = action.payload;\n    }).addCase(fetchBooks.rejected, state => {\n      state.loading = false;\n    });\n  },\n  reducers: {}\n});\nexport default bookSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","constant","API","routes","fetchBooks","asyncKey","searchTerm","fetch","searchBooks","then","res","json","initialState","books","numFound","start","numFoundExact","docs","num_found","q","offset","loading","bookSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducers","reducer"],"sources":["/Users/mac/Desktop/divine_books/src/redux/slices/bookSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport constant from '@/config/constants'\n\ninterface FetchBooksResult {\n  numFound: number\n  start: number\n  numFoundExact: boolean\n  docs: any[]\n  num_found: number\n  q: string\n  offset: number | null\n}\n\nconst {\n  API: { routes }\n} = constant\n\nexport const fetchBooks = createAsyncThunk<FetchBooksResult, string, any>(routes.asyncKey, (searchTerm) => {\n  return fetch(`${routes.searchBooks}=${searchTerm}`).then((res) => res.json())\n})\n\ninterface BookState {\n  books: FetchBooksResult\n  loading: boolean\n}\n\nconst initialState: BookState = {\n  books: {\n    numFound: 0,\n    start: 0,\n    numFoundExact: true,\n    docs: [],\n    num_found: 0,\n    q: '',\n    offset: null\n  },\n  loading: false\n}\n\nconst bookSlice = createSlice({\n  name: 'books',\n  initialState,\n  extraReducers(builder) {\n    builder\n      .addCase(fetchBooks.pending, (state) => {\n        state.loading = true\n      })\n      .addCase(fetchBooks.fulfilled, (state, action) => {\n        state.loading = false\n        state.books = action.payload\n      })\n      .addCase(fetchBooks.rejected, (state) => {\n        state.loading = false\n      })\n  },\n  reducers: {}\n})\n\nexport default bookSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,oBAAoB;AAYzC,MAAM;EACJC,GAAG,EAAE;IAAEC;EAAO;AAChB,CAAC,GAAGF,QAAQ;AAEZ,OAAO,MAAMG,UAAU,GAAGJ,gBAAgB,CAAgCG,MAAM,CAACE,QAAQ,EAAGC,UAAU,IAAK;EACzG,OAAOC,KAAK,CAAE,GAAEJ,MAAM,CAACK,WAAY,IAAGF,UAAW,EAAC,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC/E,CAAC,CAAC;AAOF,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE;IACLC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE,IAAI;IACnBC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,CAAC;IACZC,CAAC,EAAE,EAAE;IACLC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGvB,WAAW,CAAC;EAC5BwB,IAAI,EAAE,OAAO;EACbX,YAAY;EACZY,aAAa,CAACC,OAAO,EAAE;IACrBA,OAAO,CACJC,OAAO,CAACtB,UAAU,CAACuB,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDK,OAAO,CAACtB,UAAU,CAACyB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACtB,UAAU,CAAC4B,QAAQ,EAAGJ,KAAK,IAAK;MACvCA,KAAK,CAACP,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;EACN,CAAC;EACDY,QAAQ,EAAE,CAAC;AACb,CAAC,CAAC;AAEF,eAAeX,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}